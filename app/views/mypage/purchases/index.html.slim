.container.mb-3
  .col-md-10.offset-md-1.col-lg-8.offset-lg-2
    = render 'shared/user_profile', user: current_user
    = turbo_frame_tag 'list-with-tab' do
      = render 'shared/tab_buttons'
      = search_form_for @q, url: mypage_purchases_path,
                        html: { data: { turbo_frame: "purchases-list" } },
                        class: 'row align-items-top justify-content-center g-2 mb-3 ms-0' do |f|
        .col-auto.position-relative[data-controller="autocomplete" data-autocomplete-url-value="/beans/search" role="combobox"]
          = f.label :bean_name_cont, class: 'visually-hidden'
          = f.text_field :bean_name_cont, class: 'form-control', placeholder: Bean.human_attribute_name(:name), data: { autocomplete_target: "input" }
          = f.hidden_field :bean_name, data: { autocomplete_target: "hidden" }
          ul.z-2.position-absolute.top-100.start-0.list-group[data-autocomplete-target="results"]
        .col-auto.z-2.position-relative[data-controller="autocomplete" data-autocomplete-url-value="/shops/search" role="combobox"]
          = f.label :shop_name_cont, class: 'visually-hidden'
          = f.text_field :shop_name_cont, class: 'form-control', placeholder: Shop.human_attribute_name(:name), data: { autocomplete_target: "input" }
          = f.hidden_field :shop_name, data: { autocomplete_target: "hidden" }
          ul.z-2.list-group.position-absolute.top-100.start-0[data-autocomplete-target="results"]
        .col-auto
          = f.label :store_roast_option_eq, class: 'visually-hidden'
          = f.select :store_roast_option_eq, Purchase.store_roast_options_i18n.invert.map{|key, value| [key, Purchase.store_roast_options[value]]}, { prompt: Purchase.human_attribute_name(:store_roast_option) }, { class: 'col-auto form-select' }
        .col-auto
          = f.label :store_grind_option_eq, class: 'visually-hidden'
          = f.select :store_grind_option_eq, Purchase.store_grind_options_i18n.invert.map{|key, value| [key, Purchase.store_grind_options[value]]}, { prompt: Purchase.human_attribute_name(:store_grind_option) }, { class: 'col-auto form-select' }
        .col-auto
          = f.submit t('default.search'), class: 'col-auto btn btn-secondary'

      = link_to t('default.register', item: Purchase.model_name.human), new_purchase_path, class: 'btn btn-outline-dark col-12 mb-3', data: { turbo_frame: '_top'}
      = turbo_frame_tag 'purchases-list' do
        - if @purchases.present?
          .accordion.accordion-flush#accordionPurchases
            = render @purchases
            / = render 'purchase'
          = paginate @purchases
        - else
          h3.col-10.offset-1 = t('default.noting', item: Purchase.model_name.human)

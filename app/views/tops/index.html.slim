- assign_meta_tags title: t('.title')
- breadcrumb :root
.swiper
  .swiper-wrapper
    - if @top_sliders.present?
      - if @top_sliders.count < 4 && @top_sliders.count > 1
        - 2.times do
          - @top_sliders.each do |slider|
            = image_tag slider.image.url, class: 'swiper-slide object-fit-cover'
      - else
        - @top_sliders.each do |slider|
          = image_tag slider.image.url, class: 'swiper-slide object-fit-cover'
    - else
      = image_tag 'OGP.png', class: 'swiper-slide object-fit-cover'
  .swiper-pagination
  .swiper-button-prev
  .swiper-button-next

.container.my-3
  .col-md-10.offset-md-1
    .d-flex.justify-content-between
      .col-8.me-1
        h3 = t('.search_from_review')
        = search_form_for @q, url: tops_search_path, html: { data: { turbo_frame: "top-list" } }, class: 'mb-2' do |f|
          .position-relative[data-controller="autocomplete" data-autocomplete-url-value="/beans/search" role="combobox"]
            .input-group
              = f.text_field :purchase_bean_name_cont, class: 'form-control', placeholder: Bean.human_attribute_name(:name), data: { autocomplete_target: "input" }
              = f.hidden_field :purchase_bean_name, data: { autocomplete_target: "hidden" }
              = f.select :brewing_method_name_eq, BrewingMethod.pluck(:name), { prompt: BrewingMethod.model_name.human }, { class: 'form-select' }
              = f.submit t('defaults.search'), class: 'btn btn-secondary'
            ul.z-2.list-group.position-absolute.top-100.start-0[data-autocomplete-target="results"]
        = turbo_frame_tag 'top_list' do
          - if @reviews.present?
            .d-flex.justify-content-end
              h5.mb-0.me-auto = t('.recommendation_for_you')
              = sort_link(@q, :evaluation, class: 'link-dark ms-2')
              = sort_link(@q, :like_count, class: 'link-dark ms-2')
              = sort_link(@q, :created_at, class: 'link-dark ms-2')
            = render partial: 'review', collection: @reviews
            = paginate @reviews
          - else
            h2.ms-4 = t('defaults.nothing', item: Review.model_name.human)
      .col-4
        h3.text-center = t('.search_from_region')
        .row.ms-1.justify-content-evenly.g-2
          = render partial: 'region',collection: @regions
